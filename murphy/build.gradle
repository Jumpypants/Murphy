plugins {
    id 'com.android.library'
    id 'maven-publish'
    // You don't need the deployer plugin for GitHub Packages, so I removed it.
    // If you still want it for other reasons, add it back.
}

android {
    namespace 'com.jumpypants.murphy'
    compileSdk 35

    defaultConfig {
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    // This makes Gradle create sources/javadoc jars for the release variant
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

dependencies {
    implementation libs.appcompat
    implementation libs.material
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core

    implementation 'org.firstinspires.ftc:RobotCore:10.2.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
}

publishing {
    publications {
        // We'll attach the Android 'release' component after evaluation (see afterEvaluate below)
        create('gpr', MavenPublication) {
            groupId = 'com.jumpypants'
            artifactId = 'murphy'
            version = '1.0.0'
        }
    }
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Jumpypants/Murphy") // <-- change these
            credentials {
                // Works in GitHub Actions. Locally you can set -Pgpr.user / -Pgpr.key if you want.
                username = System.getenv("GITHUB_ACTOR") ?: (project.findProperty("gpr.user") ?: "")
                password = System.getenv("GITHUB_TOKEN") ?: (project.findProperty("gpr.key") ?: "")
            }
        }
    }
}

// Needed for Android projects so the 'release' component exists before we attach it
afterEvaluate {
    publishing.publications.gpr.from(components.release)
}
